{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport MapScreen from \"../screens/MapScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"MapTab\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"HomeTab\",\n      component: HomeScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Home',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"home\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"MapTab\",\n      component: MapScreen,\n      options: {\n        title: 'Map',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"map\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","HomeScreen","MapScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["/home/syphez/Desktop/code/places-online/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport {FontAwesome} from '@expo/vector-icons';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {NavigationContainer, DefaultTheme, DarkTheme} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport {ColorSchemeName, Pressable} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport MapScreen from '../screens/MapScreen';\nimport {RootStackParamList, RootTabParamList, RootTabScreenProps} from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({colorScheme}: {colorScheme: ColorSchemeName}) {\n    return (\n        <NavigationContainer\n            linking={LinkingConfiguration}\n            theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n            <RootNavigator />\n        </NavigationContainer>\n    );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{headerShown: false}} />\n            <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{title: 'Oops!'}} />\n            <Stack.Group screenOptions={{presentation: 'modal'}}>\n                <Stack.Screen name=\"Modal\" component={ModalScreen} />\n            </Stack.Group>\n        </Stack.Navigator>\n    );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n    const colorScheme = useColorScheme();\n\n    return (\n        <BottomTab.Navigator\n            initialRouteName=\"MapTab\"\n            screenOptions={{\n                tabBarActiveTintColor: Colors[colorScheme].tint,\n            }}>\n            <BottomTab.Screen\n                name=\"HomeTab\"\n                component={HomeScreen}\n                options={({navigation}: RootTabScreenProps<'HomeTab'>) => ({\n                    title: 'Home',\n                    tabBarIcon: ({color}) => <TabBarIcon name=\"home\" color={color} />,\n                    headerRight: () => (\n                        <Pressable\n                            onPress={() => navigation.navigate('Modal')}\n                            style={({pressed}) => ({\n                                opacity: pressed ? 0.5 : 1,\n                            })}>\n                            <FontAwesome\n                                name=\"info-circle\"\n                                size={25}\n                                color={Colors[colorScheme].text}\n                                style={{marginRight: 15}}\n                            />\n                        </Pressable>\n                    ),\n                })}\n            />\n            <BottomTab.Screen\n                name=\"MapTab\"\n                component={MapScreen}\n                options={{\n                    title: 'Map',\n                    tabBarIcon: ({color}) => <TabBarIcon name=\"map\" color={color} />,\n                }}\n            />\n        </BottomTab.Navigator>\n    );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n    name: React.ComponentProps<typeof FontAwesome>['name'];\n    color: string;\n}) {\n    return <FontAwesome size={30} style={{marginBottom: -3}} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}