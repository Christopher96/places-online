{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { View } from \"../components/Themed\";\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    latitude: 37.78825,\n    longitude: -122.4324,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      region = _useState2[0],\n      setRegion = _useState2[1];\n\n  var onRegionChange = function onRegionChange(region) {\n    setRegion(region);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(MapView, {\n      provider: PROVIDER_GOOGLE,\n      initialRegion: region,\n      onRegionChange: onRegionChange,\n      customMapStyle: mapStyle,\n      style: styles.map\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});\nvar mapStyle = [{\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#f5f5f5\"\n  }]\n}, {\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#616161\"\n  }]\n}, {\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#f5f5f5\"\n  }]\n}, {\n  \"featureType\": \"administrative.land_parcel\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#bdbdbd\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#eeeeee\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"featureType\": \"poi.park\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#e5e5e5\"\n  }]\n}, {\n  \"featureType\": \"poi.park\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#9e9e9e\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"road.arterial\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#dadada\"\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#616161\"\n  }]\n}, {\n  \"featureType\": \"road.local\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#9e9e9e\"\n  }]\n}, {\n  \"featureType\": \"transit.line\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#e5e5e5\"\n  }]\n}, {\n  \"featureType\": \"transit.station\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#eeeeee\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#c9c9c9\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#9e9e9e\"\n  }]\n}];","map":{"version":3,"names":["View","MapView","PROVIDER_GOOGLE","React","useState","MapScreen","navigation","latitude","longitude","latitudeDelta","longitudeDelta","region","setRegion","onRegionChange","styles","container","mapStyle","map","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","separator","marginVertical","height","width","Dimensions","get"],"sources":["/home/syphez/Desktop/code/places-online/screens/MapScreen.tsx"],"sourcesContent":["import {StyleSheet, Dimensions, Alert} from 'react-native';\nimport {Text, View} from '../components/Themed';\nimport MapView, {PROVIDER_GOOGLE} from 'react-native-maps';\nimport {RootTabScreenProps} from '../types';\nimport React, {useEffect, useState} from \"react\";\n// import * as Location from 'expo-location';\n\nexport default function MapScreen({navigation}: RootTabScreenProps<'MapTab'>) {\n    // const [location, setLocation] = useState(null);\n    //\n    // useEffect(() => {\n    //     (async () => {\n    //         let {status} = await Location.requestForegroundPermissionsAsync();\n    //         if (status !== 'granted') {\n    //             Alert.alert('Permission to access location was denied');\n    //             return;\n    //         }\n    //\n    //         let location = await Location.getCurrentPositionAsync({});\n    //         setLocation(location);\n    //     })();\n    // }, []);\n\n    const [region, setRegion] = useState({\n        latitude: 37.78825,\n        longitude: -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421,\n    });\n\n    const onRegionChange = (region) => {\n        setRegion(region);\n    }\n\n    return (\n        <View style={styles.container} >\n            <MapView\n                provider={PROVIDER_GOOGLE}\n                initialRegion={region}\n                onRegionChange={onRegionChange}\n                customMapStyle={mapStyle}\n                style={styles.map}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    separator: {\n        marginVertical: 30,\n        height: 1,\n        width: '80%',\n    },\n    map: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n    },\n});\n\nconst mapStyle = [\n    {\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#616161\"\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.land_parcel\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#bdbdbd\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#757575\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e5e5e5\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#9e9e9e\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#757575\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dadada\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#616161\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#9e9e9e\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit.line\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e5e5e5\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit.station\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#c9c9c9\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#9e9e9e\"\n            }\n        ]\n    }\n]\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}